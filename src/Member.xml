<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ldg.mybatis">
<!-- 	 insert update update update(조건) select 
        select select select select(조건) SELECT SELECT select select(조건) select(조건) SELECT(조건)
        select select select select select -->
	<update id="updateArticle" parameterType="Member">
		update member set sch_emt=#{sch_emt}, sch_mid=#{sch_mid},sch_high=#{sch_high} 
		where memberid=#{memberid} 
	</update>
	
	<delete id="deleteArticle" parameterType="hashmap" >
 	  delete from member where memberid=#{memberid}
   </delete> 
	
	<select id="login" resultType="int" parameterType="hashmap">
		select password from member where memberid=#{memberid}
	</select>
	
	
	<insert id="insertMember" parameterType="Member">
	insert into member(memberid, password,name,
	birthday,sch_emt,sch_mid,sch_high, joindate, 
	point, emtid, midid, highid) 
	values(#{memberid},#{password},#{name},#{birthday},
	#{sch_emt},#{sch_mid},#{sch_high},
	sysdate,#{point},#{emtid},#{midid},#{highid})";
    </insert>
	
	<insert id="insertMember" parameterType="Relation">
	insert into relation(myid, otherid, status) 
	values(#{myid},#{otherid},#{status})
    </insert>
	
	
	
	
	
	<select id="getArticleCount" resultType="int" parameterType="hashmap">
		select password from member where memberid=#{memberid}
	</select>
	
	
	
	<select id="boardList" resultType="Board" parameterType="hashmap">
		select * from board
		<if test="num!=null">
			WHERE num = #{num}
		</if>
		<if test="boardid!=null">
			WHERE boardid=#{boardid}
		</if>
	</select>
	
	<select id="getArticleCount" resultType="int" parameterType="hashmap">
		select nvl(count(*),0) from board
		<if test="num!=null">
			WHERE num = #{num}
		</if>
		<if test="boardid!=null">
			WHERE boardid=#{boardid}
		</if>
	</select>
	
	<select id="getArticles" resultType="Board" parameterType="hashmap">
		select * from (select rownum rnum ,a.* from (select num,writer,email,subject,passwd,
					reg_date,readcount,ref,re_step,re_level,content,
					ip from board where boardid = #{boardid} order by ref desc , re_step) 
					a ) where rnum  between #{startRow} and #{endRow}
	</select>
	
	<select id="getNextNumber" resultType="int">
		select boardser.nextval from dual
	</select>
	
	<update id="updateRe_step" parameterType="Board">
		update board set re_step=re_step+1 where ref=#{ref} and re_step>#{re_step}
		 and boardid = #{boardid} 
	</update>
	
	<insert id="insertBoard" parameterType="Board">
      insert into board(num, writer, email, subject, passwd, reg_date, ref, re_step, 
      re_level, content,  boardid, filename, filesize, ip)
      values(#{num},#{writer},#{email},#{subject},#{passwd}, sysdate, 
      #{ref},#{re_step},#{re_level},#{content},#{boardid},#{filename},#{filesize}, #{ip})
   </insert>
	
	<update id="addReadCount" parameterType="hashmap">
		update board set readcount = readcount +1 where num=#{num} and boardid =#{boardid}
	</update>
   
	<select id="getArticle" resultType="Board" parameterType="hashmap">
		select * from board where num =#{num} and boardid =#{boardid}
	</select>
					
	<update id="updateArticle" parameterType="Board">
		update board set writer=#{writer}, email=#{email},subject=#{subject},
		content=#{content} where num=#{num} and passwd=#{passwd}
	</update>
   
   <delete id="deleteArticle" parameterType="hashmap" >
 	  delete from board where num=#{num} and passwd=#{passwd} 
   </delete> 
   
   
   
</mapper>